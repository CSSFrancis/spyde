name: build

on:
  push:
  pull_request:
    branches: [main]

env:
  MPLBACKEND: agg

jobs:
  build-with-pip:
    name: ${{ matrix.os }}-py${{ matrix.python-version }}${{ matrix.LABEL }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.13"]
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            DEPENDENCIES: diffsims==0.7.0  lmfit==1.0.0 numpy==1.23.0 matplotlib==3.7.5 orix==0.12.1 scikit-image==0.19.0 scikit-learn==1.0.0
            LABEL: -oldest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get the number of CPUs
        id: cpus
        run: |
          import os, platform
          num_cpus = os.cpu_count()
          print(f"Number of CPU: {num_cpus}")
          print(f"Architecture: {platform.machine()}")
          output_file = os.environ["GITHUB_OUTPUT"]
          with open(output_file, "a", encoding="utf-8") as output_stream:
              output_stream.write(f"count={num_cpus}\n")
        shell: python

      - name: Install dependencies and package
        shell: bash
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -U --prefer-binary -e '.[tests]'
          pip install -U pytest-cov

      - name: Install oldest supported versions
        if: contains(matrix.LABEL, 'oldest')
        run: |
          pip install ${{ matrix.DEPENDENCIES }}

      - name: Display Python, pip and package versions
        run: |
          python -V
          pip -V
          pip list

      - name: Install Qt dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libegl1 \
            libgl1 \
            libglib2.0-0 \
            libxkbcommon-x11-0 \
            libxrender1 \
            libxi6 \
            libnss3 \
            libasound2 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-shape0 \
            libxcb-xfixes0 \
            libxcb-xinerama0 \
            xvfb

      - name: Run tests (Linux)
        if: matrix.os == 'ubuntu-latest'
        env:
          QT_QPA_PLATFORM: offscreen
        run: xvfb-run -a pytest --cov=spyde --cov-report=xml

      - name: Run tests (non-Linux)
        if: matrix.os != 'ubuntu-latest'
        run: pytest --cov=spyde --cov-report=xml

      - name: Upload coverage reports to Codecov
        if: ${{ github.repository_owner == 'spyde' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}