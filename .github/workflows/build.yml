name: build

on:
  push:
  pull_request:
    branches: [main]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  MPLBACKEND: agg
  QT_QPA_PLATFORM: offscreen
  QTWEBENGINE_DISABLE_SANDBOX: "1"
  QTWEBENGINE_CHROMIUM_FLAGS: "--no-sandbox --disable-gpu --disable-software-rasterizer"
  PYTEST_ADDOPTS: "--timeout=300 --maxfail=1 -vv -s --durations=10"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_PROGRESS_BAR: "off"

jobs:
  build-with-pip:
    name: ${{ matrix.os }}-py${{ matrix.python-version }}${{ matrix.LABEL }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]  # avoid 3.13 if hangs persist
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            DEPENDENCIES: diffsims==0.7.0  lmfit==1.0.0 numpy==1.23.0 matplotlib==3.7.5 orix==0.12.1 scikit-image==0.19.0 scikit-learn==1.0.0
            LABEL: -oldest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            setup.cfg
            setup.py
            requirements*.txt

      - name: Install dependencies and package
        shell: bash
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -U --prefer-binary -e '.[tests]'
          pip install -U pytest-cov pytest-timeout

      - name: Install oldest supported versions
        if: contains(matrix.LABEL, 'oldest')
        run: |
          pip install ${{ matrix.DEPENDENCIES }}

      - name: Display Python, pip and package versions
        run: |
          python -V
          pip -V
          pip list

      # yaml
      - name: Install Qt/X11 runtime (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          # Handle time64 rename on Ubuntu 24.04+
          if apt-cache show libasound2t64 >/dev/null 2>&1; then
            ALSA_PKG=libasound2t64
          else
            ALSA_PKG=libasound2
          fi
          sudo apt-get install -y --no-install-recommends \
            libegl1 libgl1 libglib2.0-0 libxkbcommon-x11-0 libxrender1 libxi6 \
            libnss3 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 \
            libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-xfixes0 \
            libxcb-xinerama0 xvfb "$ALSA_PKG"

      - name: Run tests (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run -a --server-args="-screen 0 1920x1080x24" pytest --cov=spyde --cov-report=xml

      - name: Run tests (non-Linux)
        if: matrix.os != 'ubuntu-latest'
        run: pytest --cov=spyde --cov-report=xml

      - name: Upload coverage reports to Codecov
        if: ${{ github.repository_owner == 'spyde' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}