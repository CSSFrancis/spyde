name: Documentation

on: [push, pull_request]

jobs:
  Build:
    # Use the "reusable workflow" from the hyperspy organisation
    uses: hyperspy/.github/.github/workflows/doc.yml@main
    with:
      # install with speed extra to avoid warnings
      pip_extra_doc: 'all,doc'
      # graphviz is required to build mermaid graph
      # optipng is required to optimize thumbnail
      # additional ubuntu packages required for sphinx-gallery and to
      # run Qt in headless mode
      ORGANISATION: 'cssfrancis' # change to DE on transfer
      install_package_ubuntu: graphviz libegl1 libgl1 libglib2.0-0 libxkbcommon-x11-0 libxrender1 libxi6 \
            libxcb-icccm4 libxcb-image0 libxcb-keysyms1 \
            libxcb-randr0t64 libxcb-render-util0 libxcb-shape0 libxcb-xfixes0 \
            xvfb optipng
      CACHE_POOCH: 'spyde' # cache pooch downloads for spyde data
      use_xvfb: true

  Push_dev:
    needs: Build
    # Push only on update to "main" and update the "dev" documentation
    # change once updated...
    if: ${{ github.repository_owner == 'cssfrancis' && github.ref_name == 'main' }}
    permissions:
      # needs write permission to push the docs to gh-pages
      contents: write
    # Use the "reusable workflow" from the hyperspy organisation
    uses: hyperspy/.github/.github/workflows/push_doc.yml@main
    with:
      #external_repository: 'hyperspy/hyperspy-doc' (update eventually)
      output_path: 'dev'
    secrets:
      personal_token: ${{ secrets.PAT_DOCUMENTATION }}

  Push_tag:
    needs: Build
    # Push only on tag and update the "current" documentation
    if: ${{ github.repository_owner == 'cssfrancis' && startsWith(github.ref, 'refs/tags/') }}
    permissions:
      # needs write permission to push the docs to gh-pages
      contents: write
    # Use the "reusable workflow" from the hyperspy organisation
    uses: hyperspy/.github/.github/workflows/push_doc.yml@main
    with:
      #external_repository: 'hyperspy/hyperspy-doc'
      output_path: ${{ github.ref_name }}
      # Update the current version.
      create_stable_copy: true
      persistent_name: current
    secrets:
      personal_token: ${{ secrets.PAT_DOCUMENTATION }}